syntax = "proto3";

package chora.validator.v1;

import "cosmos/orm/v1/orm.proto";

option go_package = "github.com/choraio/mods/validator/types/v1";

// Policy defines a singleton table for the signing policy.
message Policy {
  option (cosmos.orm.v1.singleton) = {
    id : 1
  };

  // signed_blocks_window is the window within which a validator is expected to
  // sign a block.
  int64 signed_blocks_window = 1;

  // min_signed_per_window is the minimum number of signed blocks per signed
  // blocks window.
  int64 min_signed_per_window = 2;
}

// Validator defines the table and properties of a validator.
message Validator {
  option (cosmos.orm.v1.table) = {
    id : 2,
    primary_key : {fields : "address"}
    index : {id : 1, fields : "operator"}
  };

  // address is the address of the validator.
  string address = 1;

  // operator is the address of the operator.
  string operator = 2;

  // metadata is the metadata of the validator.
  string metadata = 3;
}

// ValidatorSigningInfo extends the table and properties of a validator.
message ValidatorSigningInfo {
  option (cosmos.orm.v1.table) = {
    id : 3,
    primary_key : {fields : "address"}
  };

  // address is the address of the validator.
  string address = 1;

  // start_height is the validator start height.
  int64 start_height = 2;

  // index_offset is incremented every time a validator is bonded in a block.
  // This in conjunction with the signed_blocks_window param determines the
  // index in the missed block bitmap.
  int64 index_offset = 3;

  // missed_blocks contains missed blocks.
  repeated MissedBlock missed_blocks = 4;

  // missed_blocks is the number of missed blocks.
  int64 missed_blocks_count = 5;

  // MissedBlock represents a missed block.
  message MissedBlock {

    // index is the height at which the block was missed.
    int64 index = 1;

    // missed is a boolean representing the missed block.
    bool missed = 2;
  }
}
