syntax = "proto3";

package chora.content.v1;

import "cosmos/msg/v1/msg.proto";

option go_package = "github.com/chora-io/mods/content/types/v1";

// Msg is the Msg service.
service Msg {

  // CreateContent creates content.
  rpc CreateContent(MsgCreateContent) returns (MsgCreateContentResponse);

  // RemoveContent deletes content.
  rpc RemoveContent(MsgRemoveContent) returns (MsgRemoveContentResponse);

  // UpdateContentCurator updates the curator of content.
  rpc UpdateContentCurator(MsgUpdateContentCurator)
      returns (MsgUpdateContentCuratorResponse);
}

// MsgCreateContent is the Msg/CreateContent request type.
message MsgCreateContent {
  option (cosmos.msg.v1.signer) = "curator";

  // curator is the address of the content curator.
  string curator = 1;

  // hash is the content hash of the content.
  string hash = 2;
}

// MsgCreateContentResponse is the Msg/CreateContent response type.
message MsgCreateContentResponse {

  // hash is the content hash of the content.
  string hash = 1;
}

// MsgRemoveContent is the Msg/RemoveContent request type.
message MsgRemoveContent {
  option (cosmos.msg.v1.signer) = "curator";

  // curator is the address of the content curator.
  string curator = 1;

  // hash is the content hash of the content.
  string hash = 2;
}

// MsgRemoveContentResponse is the Msg/RemoveContent response type.
message MsgRemoveContentResponse {

  // hash is the content hash of the content.
  string hash = 1;
}

// MsgUpdateContentCurator is the Msg/UpdateContentCurator request type.
message MsgUpdateContentCurator {
  option (cosmos.msg.v1.signer) = "curator";

  // curator is the address of the content curator.
  string curator = 1;

  // hash is the content hash of the content.
  string hash = 2;

  // new_curator is the address of the new curator.
  string new_curator = 3;
}

// MsgUpdateContentCuratorResponse is the Msg/UpdateContentCurator response
// type.
message MsgUpdateContentCuratorResponse {

  // hash is the content hash of the content.
  string hash = 1;
}
