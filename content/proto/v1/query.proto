syntax = "proto3";

package chora.content.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";

option go_package = "github.com/chora-io/mods/content/types/v1";

// Query is the Query service.
service Query {

  // Content queries content by hash.
  rpc Content(QueryContentRequest) returns (QueryContentResponse) {
    option (google.api.http).get = "/chora/content/v1/content/{hash}";
  }

  // Contents queries all content.
  rpc Contents(QueryContentsRequest) returns (QueryContentsResponse) {
    option (google.api.http).get = "/chora/content/v1/contents";
  }

  // ContentsByCurator queries content by curator.
  rpc ContentsByCurator(QueryContentsByCuratorRequest)
      returns (QueryContentsByCuratorResponse) {
    option (google.api.http).get =
        "/chora/content/v1/contents-by-curator/{curator}";
  }
}

// QueryContentRequest is the Query/Content request type.
message QueryContentRequest {

  // hash is the content hash of the content.
  string hash = 1;
}

// QueryContentResponse is the Query/Content response type.
message QueryContentResponse {

  // hash is the content hash of the content.
  string hash = 1;

  // curator is the address of the content curator.
  string curator = 2;
}

// QueryContentsRequest is the Query/Contents request type.
message QueryContentsRequest {

  // pagination is the optional pagination of the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryContentsResponse is the Query/Contents response type.
message QueryContentsResponse {

  // contents is the list of content.
  repeated Content contents = 1;

  // pagination is the pagination of the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 3;

  // Content is the content properties.
  message Content {

    // hash is the content hash of the content.
    string hash = 1;

    // curator is the address of the content curator.
    string curator = 2;
  }
}

// QueryContentsByCuratorRequest is the Query/ContentsByCurator request type.
message QueryContentsByCuratorRequest {

  // curator is the address of the content curator.
  string curator = 1;

  // pagination is the optional pagination of the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 2;
}

// QueryContentsByCuratorResponse is the Query/ContentsByCurator response type.
message QueryContentsByCuratorResponse {

  // curator is the address of the content curator.
  string curator = 1;

  // contents is the list of content managed by the curator.
  repeated Content contents = 2;

  // pagination is the pagination of the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 3;

  // Content is the content properties.
  message Content {

    // hash is the content hash of the content.
    string hash = 1;
  }
}
