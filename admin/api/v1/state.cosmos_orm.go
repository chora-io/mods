// Code generated by protoc-gen-go-cosmos-orm. DO NOT EDIT.

package adminv1

import (
	context "context"
	ormtable "cosmossdk.io/orm/model/ormtable"
	ormerrors "cosmossdk.io/orm/types/ormerrors"
)

// singleton store
type AdminTable interface {
	Get(ctx context.Context) (*Admin, error)
	Save(ctx context.Context, admin *Admin) error
}

type adminTable struct {
	table ormtable.Table
}

var _ AdminTable = adminTable{}

func (x adminTable) Get(ctx context.Context) (*Admin, error) {
	admin := &Admin{}
	_, err := x.table.Get(ctx, admin)
	return admin, err
}

func (x adminTable) Save(ctx context.Context, admin *Admin) error {
	return x.table.Save(ctx, admin)
}

func NewAdminTable(db ormtable.Schema) (AdminTable, error) {
	table := db.GetTable(&Admin{})
	if table == nil {
		return nil, ormerrors.TableNotFound.Wrap(string((&Admin{}).ProtoReflect().Descriptor().FullName()))
	}
	return &adminTable{table}, nil
}

type StateStore interface {
	AdminTable() AdminTable

	doNotImplement()
}

type stateStore struct {
	admin AdminTable
}

func (x stateStore) AdminTable() AdminTable {
	return x.admin
}

func (stateStore) doNotImplement() {}

var _ StateStore = stateStore{}

func NewStateStore(db ormtable.Schema) (StateStore, error) {
	adminTable, err := NewAdminTable(db)
	if err != nil {
		return nil, err
	}

	return stateStore{
		adminTable,
	}, nil
}
