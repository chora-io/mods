// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: chora/subject/v1/msg.proto

package v1

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgCreateSubject is the Msg/CreateSubject request type.
type MsgCreateSubject struct {
	// steward is the address of the subject steward.
	Steward string `protobuf:"bytes,1,opt,name=steward,proto3" json:"steward,omitempty"`
	// metadata is the metadata of the subject.
	Metadata string `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (m *MsgCreateSubject) Reset()         { *m = MsgCreateSubject{} }
func (m *MsgCreateSubject) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubject) ProtoMessage()    {}
func (*MsgCreateSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{0}
}
func (m *MsgCreateSubject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubject.Merge(m, src)
}
func (m *MsgCreateSubject) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubject proto.InternalMessageInfo

func (m *MsgCreateSubject) GetSteward() string {
	if m != nil {
		return m.Steward
	}
	return ""
}

func (m *MsgCreateSubject) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

// MsgCreateSubjectResponse is the Msg/CreateSubject response type.
type MsgCreateSubjectResponse struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgCreateSubjectResponse) Reset()         { *m = MsgCreateSubjectResponse{} }
func (m *MsgCreateSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateSubjectResponse) ProtoMessage()    {}
func (*MsgCreateSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{1}
}
func (m *MsgCreateSubjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateSubjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateSubjectResponse.Merge(m, src)
}
func (m *MsgCreateSubjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateSubjectResponse proto.InternalMessageInfo

func (m *MsgCreateSubjectResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// MsgRemoveSubject is the Msg/RemoveSubject request type.
type MsgRemoveSubject struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// steward is the address of the subject steward.
	Steward string `protobuf:"bytes,2,opt,name=steward,proto3" json:"steward,omitempty"`
}

func (m *MsgRemoveSubject) Reset()         { *m = MsgRemoveSubject{} }
func (m *MsgRemoveSubject) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubject) ProtoMessage()    {}
func (*MsgRemoveSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{2}
}
func (m *MsgRemoveSubject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubject.Merge(m, src)
}
func (m *MsgRemoveSubject) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubject proto.InternalMessageInfo

func (m *MsgRemoveSubject) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgRemoveSubject) GetSteward() string {
	if m != nil {
		return m.Steward
	}
	return ""
}

// MsgRemoveSubjectResponse is the Msg/RemoveSubject response type.
type MsgRemoveSubjectResponse struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgRemoveSubjectResponse) Reset()         { *m = MsgRemoveSubjectResponse{} }
func (m *MsgRemoveSubjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveSubjectResponse) ProtoMessage()    {}
func (*MsgRemoveSubjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{3}
}
func (m *MsgRemoveSubjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveSubjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveSubjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveSubjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveSubjectResponse.Merge(m, src)
}
func (m *MsgRemoveSubjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveSubjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveSubjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveSubjectResponse proto.InternalMessageInfo

func (m *MsgRemoveSubjectResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// MsgUpdateSubjectSteward is the Msg/UpdateSubjectSteward request type.
type MsgUpdateSubjectSteward struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// steward is the address of the subject steward.
	Steward string `protobuf:"bytes,2,opt,name=steward,proto3" json:"steward,omitempty"`
	// new_steward is the address of the new steward.
	NewSteward string `protobuf:"bytes,3,opt,name=new_steward,json=newSteward,proto3" json:"new_steward,omitempty"`
}

func (m *MsgUpdateSubjectSteward) Reset()         { *m = MsgUpdateSubjectSteward{} }
func (m *MsgUpdateSubjectSteward) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSubjectSteward) ProtoMessage()    {}
func (*MsgUpdateSubjectSteward) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{4}
}
func (m *MsgUpdateSubjectSteward) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSubjectSteward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSubjectSteward.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSubjectSteward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSubjectSteward.Merge(m, src)
}
func (m *MsgUpdateSubjectSteward) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSubjectSteward) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSubjectSteward.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSubjectSteward proto.InternalMessageInfo

func (m *MsgUpdateSubjectSteward) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateSubjectSteward) GetSteward() string {
	if m != nil {
		return m.Steward
	}
	return ""
}

func (m *MsgUpdateSubjectSteward) GetNewSteward() string {
	if m != nil {
		return m.NewSteward
	}
	return ""
}

// MsgUpdateSubjectStewardResponse is the Msg/UpdateSubjectSteward response type.
type MsgUpdateSubjectStewardResponse struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateSubjectStewardResponse) Reset()         { *m = MsgUpdateSubjectStewardResponse{} }
func (m *MsgUpdateSubjectStewardResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSubjectStewardResponse) ProtoMessage()    {}
func (*MsgUpdateSubjectStewardResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{5}
}
func (m *MsgUpdateSubjectStewardResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSubjectStewardResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSubjectStewardResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSubjectStewardResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSubjectStewardResponse.Merge(m, src)
}
func (m *MsgUpdateSubjectStewardResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSubjectStewardResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSubjectStewardResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSubjectStewardResponse proto.InternalMessageInfo

func (m *MsgUpdateSubjectStewardResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

// MsgUpdateSubjectMetadata is the Msg/UpdateSubjectMetadata request type.
type MsgUpdateSubjectMetadata struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	// steward is the address of the subject steward.
	Steward string `protobuf:"bytes,2,opt,name=steward,proto3" json:"steward,omitempty"`
	// new_metadata is the new metadata of the subject.
	NewMetadata string `protobuf:"bytes,3,opt,name=new_metadata,json=newMetadata,proto3" json:"new_metadata,omitempty"`
}

func (m *MsgUpdateSubjectMetadata) Reset()         { *m = MsgUpdateSubjectMetadata{} }
func (m *MsgUpdateSubjectMetadata) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSubjectMetadata) ProtoMessage()    {}
func (*MsgUpdateSubjectMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{6}
}
func (m *MsgUpdateSubjectMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSubjectMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSubjectMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSubjectMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSubjectMetadata.Merge(m, src)
}
func (m *MsgUpdateSubjectMetadata) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSubjectMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSubjectMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSubjectMetadata proto.InternalMessageInfo

func (m *MsgUpdateSubjectMetadata) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgUpdateSubjectMetadata) GetSteward() string {
	if m != nil {
		return m.Steward
	}
	return ""
}

func (m *MsgUpdateSubjectMetadata) GetNewMetadata() string {
	if m != nil {
		return m.NewMetadata
	}
	return ""
}

// MsgUpdateSubjectMetadataResponse is the Msg/UpdateSubjectMetadata response type.
type MsgUpdateSubjectMetadataResponse struct {
	// address is the address of the subject.
	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (m *MsgUpdateSubjectMetadataResponse) Reset()         { *m = MsgUpdateSubjectMetadataResponse{} }
func (m *MsgUpdateSubjectMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateSubjectMetadataResponse) ProtoMessage()    {}
func (*MsgUpdateSubjectMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_49abe0cef6623aba, []int{7}
}
func (m *MsgUpdateSubjectMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateSubjectMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateSubjectMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateSubjectMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateSubjectMetadataResponse.Merge(m, src)
}
func (m *MsgUpdateSubjectMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateSubjectMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateSubjectMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateSubjectMetadataResponse proto.InternalMessageInfo

func (m *MsgUpdateSubjectMetadataResponse) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func init() {
	proto.RegisterType((*MsgCreateSubject)(nil), "chora.subject.v1.MsgCreateSubject")
	proto.RegisterType((*MsgCreateSubjectResponse)(nil), "chora.subject.v1.MsgCreateSubjectResponse")
	proto.RegisterType((*MsgRemoveSubject)(nil), "chora.subject.v1.MsgRemoveSubject")
	proto.RegisterType((*MsgRemoveSubjectResponse)(nil), "chora.subject.v1.MsgRemoveSubjectResponse")
	proto.RegisterType((*MsgUpdateSubjectSteward)(nil), "chora.subject.v1.MsgUpdateSubjectSteward")
	proto.RegisterType((*MsgUpdateSubjectStewardResponse)(nil), "chora.subject.v1.MsgUpdateSubjectStewardResponse")
	proto.RegisterType((*MsgUpdateSubjectMetadata)(nil), "chora.subject.v1.MsgUpdateSubjectMetadata")
	proto.RegisterType((*MsgUpdateSubjectMetadataResponse)(nil), "chora.subject.v1.MsgUpdateSubjectMetadataResponse")
}

func init() { proto.RegisterFile("chora/subject/v1/msg.proto", fileDescriptor_49abe0cef6623aba) }

var fileDescriptor_49abe0cef6623aba = []byte{
	// 413 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xbf, 0x4e, 0xfa, 0x50,
	0x14, 0xc7, 0x29, 0x24, 0xbf, 0x3f, 0x47, 0x48, 0x48, 0xa3, 0xa1, 0xe9, 0x50, 0xb0, 0x93, 0x90,
	0xd8, 0xa6, 0xe8, 0xa4, 0x4e, 0x32, 0x77, 0x01, 0x75, 0x70, 0x21, 0xa5, 0xbd, 0x29, 0x98, 0x94,
	0xdb, 0xf4, 0x5e, 0xda, 0x98, 0x98, 0x98, 0xf8, 0x04, 0x3e, 0x8a, 0x93, 0xcf, 0xe0, 0xc8, 0xe8,
	0x68, 0x60, 0xf0, 0x35, 0x4c, 0x4b, 0x5b, 0xb9, 0xe4, 0x12, 0x1a, 0xc6, 0x93, 0xf3, 0xed, 0xf7,
	0x7c, 0x4e, 0xcf, 0x37, 0x17, 0x64, 0x7b, 0x8c, 0x03, 0x4b, 0x27, 0xb3, 0xd1, 0x03, 0xb2, 0xa9,
	0x1e, 0x1a, 0xba, 0x47, 0x5c, 0xcd, 0x0f, 0x30, 0xc5, 0x62, 0x3d, 0xe9, 0x69, 0x69, 0x4f, 0x0b,
	0x0d, 0xb9, 0x61, 0x63, 0xe2, 0x61, 0x12, 0x6b, 0x18, 0xa9, 0x7a, 0x07, 0x75, 0x93, 0xb8, 0xbd,
	0x00, 0x59, 0x14, 0x0d, 0x56, 0x7a, 0x51, 0x82, 0xbf, 0x84, 0xa2, 0xc8, 0x0a, 0x1c, 0x49, 0x68,
	0x09, 0x27, 0xff, 0xfb, 0x59, 0x29, 0xca, 0xf0, 0xcf, 0x43, 0xd4, 0x72, 0x2c, 0x6a, 0x49, 0xe5,
	0xa4, 0x95, 0xd7, 0x17, 0xd5, 0x97, 0xef, 0xb7, 0x4e, 0xa6, 0x54, 0xcf, 0x41, 0xda, 0xf4, 0xed,
	0x23, 0xe2, 0xe3, 0x29, 0x41, 0xb1, 0xbf, 0xe5, 0x38, 0x01, 0x22, 0x24, 0xf3, 0x4f, 0x4b, 0xf5,
	0x26, 0xa1, 0xe9, 0x23, 0x0f, 0x87, 0xeb, 0x34, 0x7c, 0xf5, 0x3a, 0x67, 0x99, 0xe1, 0xe4, 0xb2,
	0x30, 0xae, 0x05, 0x58, 0x9e, 0xa0, 0x61, 0x12, 0xf7, 0xd6, 0x77, 0x7e, 0x37, 0x18, 0xa4, 0xbf,
	0x61, 0x0f, 0x24, 0xb1, 0x09, 0x07, 0x53, 0x14, 0x0d, 0xb3, 0x6e, 0x25, 0xe9, 0xc2, 0x14, 0x45,
	0x03, 0x2e, 0xf3, 0x25, 0x34, 0xb7, 0x4c, 0x2f, 0x80, 0xfe, 0x9c, 0x2c, 0xcc, 0x7c, 0x6c, 0xa6,
	0x67, 0xda, 0x8b, 0xfd, 0x18, 0xaa, 0x31, 0x7b, 0x7e, 0xfa, 0x15, 0x7c, 0xbc, 0x8f, 0xc9, 0xbf,
	0xfe, 0x15, 0xb4, 0xb6, 0x01, 0xec, 0xc6, 0xef, 0xbe, 0x57, 0xa0, 0x62, 0x12, 0x57, 0x1c, 0x42,
	0x8d, 0x0d, 0xa6, 0xaa, 0x6d, 0x06, 0x5b, 0xdb, 0x0c, 0x99, 0xdc, 0xd9, 0xad, 0xc9, 0x11, 0x86,
	0x50, 0x63, 0xb3, 0xc6, 0x1f, 0xc0, 0x68, 0xb6, 0x0c, 0xe0, 0xa7, 0x8b, 0xc2, 0x21, 0x37, 0x40,
	0x6d, 0xae, 0x07, 0x4f, 0x2a, 0x1b, 0x85, 0xa5, 0xf9, 0xd4, 0x08, 0x8e, 0xf8, 0xb7, 0xef, 0xec,
	0xf6, 0xca, 0xb4, 0x72, 0xb7, 0xb8, 0x36, 0x1b, 0x7c, 0xdd, 0xfb, 0x58, 0x28, 0xc2, 0x7c, 0xa1,
	0x08, 0x5f, 0x0b, 0x45, 0x78, 0x5d, 0x2a, 0xa5, 0xf9, 0x52, 0x29, 0x7d, 0x2e, 0x95, 0xd2, 0x7d,
	0xdb, 0x9d, 0xd0, 0xf1, 0x6c, 0xa4, 0xd9, 0xd8, 0xd3, 0x13, 0xdf, 0xd3, 0x09, 0xd6, 0x3d, 0xec,
	0x90, 0xfc, 0x01, 0xa3, 0x8f, 0x3e, 0x22, 0x7a, 0x68, 0x8c, 0xfe, 0x24, 0x0f, 0xd3, 0xd9, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x40, 0x0f, 0xee, 0xe1, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// CreateSubject creates an subject.
	CreateSubject(ctx context.Context, in *MsgCreateSubject, opts ...grpc.CallOption) (*MsgCreateSubjectResponse, error)
	// RemoveSubject removes an subject.
	RemoveSubject(ctx context.Context, in *MsgRemoveSubject, opts ...grpc.CallOption) (*MsgRemoveSubjectResponse, error)
	// UpdateSubjectSteward updates the subject steward.
	UpdateSubjectSteward(ctx context.Context, in *MsgUpdateSubjectSteward, opts ...grpc.CallOption) (*MsgUpdateSubjectStewardResponse, error)
	// UpdateSubjectMetadata updates the subject metadata.
	UpdateSubjectMetadata(ctx context.Context, in *MsgUpdateSubjectMetadata, opts ...grpc.CallOption) (*MsgUpdateSubjectMetadataResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) CreateSubject(ctx context.Context, in *MsgCreateSubject, opts ...grpc.CallOption) (*MsgCreateSubjectResponse, error) {
	out := new(MsgCreateSubjectResponse)
	err := c.cc.Invoke(ctx, "/chora.subject.v1.Msg/CreateSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveSubject(ctx context.Context, in *MsgRemoveSubject, opts ...grpc.CallOption) (*MsgRemoveSubjectResponse, error) {
	out := new(MsgRemoveSubjectResponse)
	err := c.cc.Invoke(ctx, "/chora.subject.v1.Msg/RemoveSubject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSubjectSteward(ctx context.Context, in *MsgUpdateSubjectSteward, opts ...grpc.CallOption) (*MsgUpdateSubjectStewardResponse, error) {
	out := new(MsgUpdateSubjectStewardResponse)
	err := c.cc.Invoke(ctx, "/chora.subject.v1.Msg/UpdateSubjectSteward", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateSubjectMetadata(ctx context.Context, in *MsgUpdateSubjectMetadata, opts ...grpc.CallOption) (*MsgUpdateSubjectMetadataResponse, error) {
	out := new(MsgUpdateSubjectMetadataResponse)
	err := c.cc.Invoke(ctx, "/chora.subject.v1.Msg/UpdateSubjectMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// CreateSubject creates an subject.
	CreateSubject(context.Context, *MsgCreateSubject) (*MsgCreateSubjectResponse, error)
	// RemoveSubject removes an subject.
	RemoveSubject(context.Context, *MsgRemoveSubject) (*MsgRemoveSubjectResponse, error)
	// UpdateSubjectSteward updates the subject steward.
	UpdateSubjectSteward(context.Context, *MsgUpdateSubjectSteward) (*MsgUpdateSubjectStewardResponse, error)
	// UpdateSubjectMetadata updates the subject metadata.
	UpdateSubjectMetadata(context.Context, *MsgUpdateSubjectMetadata) (*MsgUpdateSubjectMetadataResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) CreateSubject(ctx context.Context, req *MsgCreateSubject) (*MsgCreateSubjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSubject not implemented")
}
func (*UnimplementedMsgServer) RemoveSubject(ctx context.Context, req *MsgRemoveSubject) (*MsgRemoveSubjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveSubject not implemented")
}
func (*UnimplementedMsgServer) UpdateSubjectSteward(ctx context.Context, req *MsgUpdateSubjectSteward) (*MsgUpdateSubjectStewardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubjectSteward not implemented")
}
func (*UnimplementedMsgServer) UpdateSubjectMetadata(ctx context.Context, req *MsgUpdateSubjectMetadata) (*MsgUpdateSubjectMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSubjectMetadata not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_CreateSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateSubject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chora.subject.v1.Msg/CreateSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateSubject(ctx, req.(*MsgCreateSubject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveSubject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveSubject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveSubject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chora.subject.v1.Msg/RemoveSubject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveSubject(ctx, req.(*MsgRemoveSubject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSubjectSteward_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSubjectSteward)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSubjectSteward(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chora.subject.v1.Msg/UpdateSubjectSteward",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSubjectSteward(ctx, req.(*MsgUpdateSubjectSteward))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateSubjectMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateSubjectMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateSubjectMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chora.subject.v1.Msg/UpdateSubjectMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateSubjectMetadata(ctx, req.(*MsgUpdateSubjectMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "chora.subject.v1.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSubject",
			Handler:    _Msg_CreateSubject_Handler,
		},
		{
			MethodName: "RemoveSubject",
			Handler:    _Msg_RemoveSubject_Handler,
		},
		{
			MethodName: "UpdateSubjectSteward",
			Handler:    _Msg_UpdateSubjectSteward_Handler,
		},
		{
			MethodName: "UpdateSubjectMetadata",
			Handler:    _Msg_UpdateSubjectMetadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "chora/subject/v1/msg.proto",
}

func (m *MsgCreateSubject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Metadata) > 0 {
		i -= len(m.Metadata)
		copy(dAtA[i:], m.Metadata)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Metadata)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Steward) > 0 {
		i -= len(m.Steward)
		copy(dAtA[i:], m.Steward)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Steward)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateSubjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateSubjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateSubjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Steward) > 0 {
		i -= len(m.Steward)
		copy(dAtA[i:], m.Steward)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Steward)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveSubjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveSubjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveSubjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSubjectSteward) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSubjectSteward) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSubjectSteward) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewSteward) > 0 {
		i -= len(m.NewSteward)
		copy(dAtA[i:], m.NewSteward)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.NewSteward)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Steward) > 0 {
		i -= len(m.Steward)
		copy(dAtA[i:], m.Steward)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Steward)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSubjectStewardResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSubjectStewardResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSubjectStewardResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSubjectMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSubjectMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSubjectMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.NewMetadata) > 0 {
		i -= len(m.NewMetadata)
		copy(dAtA[i:], m.NewMetadata)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.NewMetadata)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Steward) > 0 {
		i -= len(m.Steward)
		copy(dAtA[i:], m.Steward)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Steward)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateSubjectMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateSubjectMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateSubjectMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintMsg(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintMsg(dAtA []byte, offset int, v uint64) int {
	offset -= sovMsg(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgCreateSubject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Steward)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Metadata)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgCreateSubjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgRemoveSubject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Steward)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgRemoveSubjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgUpdateSubjectSteward) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Steward)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.NewSteward)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgUpdateSubjectStewardResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgUpdateSubjectMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.Steward)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	l = len(m.NewMetadata)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func (m *MsgUpdateSubjectMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovMsg(uint64(l))
	}
	return n
}

func sovMsg(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozMsg(x uint64) (n int) {
	return sovMsg(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgCreateSubject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Steward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Steward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Metadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Metadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateSubjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateSubjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateSubjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Steward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Steward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveSubjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveSubjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveSubjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSubjectSteward) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSubjectSteward: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSubjectSteward: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Steward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Steward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewSteward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewSteward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSubjectStewardResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSubjectStewardResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSubjectStewardResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSubjectMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSubjectMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSubjectMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Steward", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Steward = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field NewMetadata", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.NewMetadata = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateSubjectMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateSubjectMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateSubjectMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthMsg
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthMsg
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipMsg(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthMsg
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipMsg(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowMsg
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowMsg
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthMsg
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupMsg
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthMsg
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthMsg        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowMsg          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupMsg = fmt.Errorf("proto: unexpected end of group")
)
